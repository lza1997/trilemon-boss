<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.trilemon.boss.shelf.dao.PlanSettingMapper">
    <resultMap id="BaseResultMap" type="com.trilemon.boss.shelf.model.PlanSetting">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="name_pinyin" property="namePinyin" jdbcType="VARCHAR"/>
        <result column="include_seller_cids" property="includeSellerCids" jdbcType="VARCHAR"/>
        <result column="auto_add_new_items" property="autoAddNewItems" jdbcType="BIT"/>
        <result column="exclude_item_num_iids" property="excludeItemNumIids" jdbcType="VARCHAR"/>
        <result column="distribution" property="distribution" jdbcType="VARCHAR"/>
        <result column="distribution_type" property="distributionType" jdbcType="TINYINT"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="last_plan_time" property="lastPlanTime" jdbcType="TIMESTAMP"/>
        <result column="add_time" property="addTime" jdbcType="TIMESTAMP"/>
        <result column="upd_time" property="updTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, user_id, name, name_pinyin, include_seller_cids, auto_add_new_items, exclude_item_num_iids,
        distribution, distribution_type, status, last_plan_time, add_time, upd_time
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.trilemon.boss.shelf.model.PlanSettingExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from plan_setting
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from plan_setting
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        DELETE FROM plan_setting
        WHERE id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.trilemon.boss.shelf.model.PlanSettingExample">
        delete from plan_setting
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.trilemon.boss.shelf.model.PlanSetting" useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO plan_setting (id, user_id, `name`,
                                  name_pinyin, include_seller_cids, auto_add_new_items,
                                  exclude_item_num_iids, distribution, distribution_type,
                                  `status`, last_plan_time, add_time,
                                  upd_time)
            VALUES (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR},
                    #{namePinyin,jdbcType=VARCHAR}, #{includeSellerCids,jdbcType=VARCHAR}, #{autoAddNewItems,jdbcType=BIT},
                    #{excludeItemNumIids,jdbcType=VARCHAR}, #{distribution,jdbcType=VARCHAR}, #{distributionType,jdbcType=TINYINT},
                    #{status,jdbcType=TINYINT}, #{lastPlanTime,jdbcType=TIMESTAMP}, #{addTime,jdbcType=TIMESTAMP},
                    #{updTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.trilemon.boss.shelf.model.PlanSetting" useGeneratedKeys="true"
            keyProperty="id">
        insert into plan_setting
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="namePinyin != null">
                name_pinyin,
            </if>
            <if test="includeSellerCids != null">
                include_seller_cids,
            </if>
            <if test="autoAddNewItems != null">
                auto_add_new_items,
            </if>
            <if test="excludeItemNumIids != null">
                exclude_item_num_iids,
            </if>
            <if test="distribution != null">
                distribution,
            </if>
            <if test="distributionType != null">
                distribution_type,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="lastPlanTime != null">
                last_plan_time,
            </if>
            <if test="addTime != null">
                add_time,
            </if>
            <if test="updTime != null">
                upd_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="namePinyin != null">
                #{namePinyin,jdbcType=VARCHAR},
            </if>
            <if test="includeSellerCids != null">
                #{includeSellerCids,jdbcType=VARCHAR},
            </if>
            <if test="autoAddNewItems != null">
                #{autoAddNewItems,jdbcType=BIT},
            </if>
            <if test="excludeItemNumIids != null">
                #{excludeItemNumIids,jdbcType=VARCHAR},
            </if>
            <if test="distribution != null">
                #{distribution,jdbcType=VARCHAR},
            </if>
            <if test="distributionType != null">
                #{distributionType,jdbcType=TINYINT},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="lastPlanTime != null">
                #{lastPlanTime,jdbcType=TIMESTAMP},
            </if>
            <if test="addTime != null">
                #{addTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updTime != null">
                #{updTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.trilemon.boss.shelf.model.PlanSettingExample"
            resultType="java.lang.Integer">
        select count(*) from plan_setting
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update plan_setting
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=BIGINT},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.namePinyin != null">
                name_pinyin = #{record.namePinyin,jdbcType=VARCHAR},
            </if>
            <if test="record.includeSellerCids != null">
                include_seller_cids = #{record.includeSellerCids,jdbcType=VARCHAR},
            </if>
            <if test="record.autoAddNewItems != null">
                auto_add_new_items = #{record.autoAddNewItems,jdbcType=BIT},
            </if>
            <if test="record.excludeItemNumIids != null">
                exclude_item_num_iids = #{record.excludeItemNumIids,jdbcType=VARCHAR},
            </if>
            <if test="record.distribution != null">
                distribution = #{record.distribution,jdbcType=VARCHAR},
            </if>
            <if test="record.distributionType != null">
                distribution_type = #{record.distributionType,jdbcType=TINYINT},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=TINYINT},
            </if>
            <if test="record.lastPlanTime != null">
                last_plan_time = #{record.lastPlanTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.addTime != null">
                add_time = #{record.addTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updTime != null">
                upd_time = #{record.updTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update plan_setting
        set id = #{record.id,jdbcType=BIGINT},
        user_id = #{record.userId,jdbcType=BIGINT},
        name = #{record.name,jdbcType=VARCHAR},
        name_pinyin = #{record.namePinyin,jdbcType=VARCHAR},
        include_seller_cids = #{record.includeSellerCids,jdbcType=VARCHAR},
        auto_add_new_items = #{record.autoAddNewItems,jdbcType=BIT},
        exclude_item_num_iids = #{record.excludeItemNumIids,jdbcType=VARCHAR},
        distribution = #{record.distribution,jdbcType=VARCHAR},
        distribution_type = #{record.distributionType,jdbcType=TINYINT},
        status = #{record.status,jdbcType=TINYINT},
        last_plan_time = #{record.lastPlanTime,jdbcType=TIMESTAMP},
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
        upd_time = #{record.updTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.trilemon.boss.shelf.model.PlanSetting">
        update plan_setting
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="namePinyin != null">
                name_pinyin = #{namePinyin,jdbcType=VARCHAR},
            </if>
            <if test="includeSellerCids != null">
                include_seller_cids = #{includeSellerCids,jdbcType=VARCHAR},
            </if>
            <if test="autoAddNewItems != null">
                auto_add_new_items = #{autoAddNewItems,jdbcType=BIT},
            </if>
            <if test="excludeItemNumIids != null">
                exclude_item_num_iids = #{excludeItemNumIids,jdbcType=VARCHAR},
            </if>
            <if test="distribution != null">
                distribution = #{distribution,jdbcType=VARCHAR},
            </if>
            <if test="distributionType != null">
                distribution_type = #{distributionType,jdbcType=TINYINT},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="lastPlanTime != null">
                last_plan_time = #{lastPlanTime,jdbcType=TIMESTAMP},
            </if>
            <if test="addTime != null">
                add_time = #{addTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updTime != null">
                upd_time = #{updTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.trilemon.boss.shelf.model.PlanSetting">
        UPDATE plan_setting
        SET user_id = #{userId,jdbcType=BIGINT},
            name = #{name,jdbcType=VARCHAR},
            name_pinyin = #{namePinyin,jdbcType=VARCHAR},
            include_seller_cids = #{includeSellerCids,jdbcType=VARCHAR},
            auto_add_new_items = #{autoAddNewItems,jdbcType=BIT},
            exclude_item_num_iids = #{excludeItemNumIids,jdbcType=VARCHAR},
            distribution = #{distribution,jdbcType=VARCHAR},
            distribution_type = #{distributionType,jdbcType=TINYINT},
            status = #{status,jdbcType=TINYINT},
            last_plan_time = #{lastPlanTime,jdbcType=TIMESTAMP},
            add_time = #{addTime,jdbcType=TIMESTAMP},
            upd_time = #{updTime,jdbcType=TIMESTAMP}
        WHERE id = #{id,jdbcType=BIGINT}
    </update>
    <delete id="deleteByPrimaryKeyAndUserId" parameterType="java.lang.Long">
        DELETE FROM plan_setting
        WHERE id = #{id,jdbcType=BIGINT} AND user_id = #{userId,jdbcType=BIGINT}
    </delete>

    <update id="updateByPrimaryKeyAndUserIdSelective" parameterType="com.trilemon.boss.shelf.model.PlanSetting">
        update plan_setting
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="namePinyin != null">
                name_pinyin = #{namePinyin,jdbcType=VARCHAR},
            </if>
            <if test="includeSellerCids != null">
                include_seller_cids = #{includeSellerCids,jdbcType=VARCHAR},
            </if>
            <if test="autoAddNewItems != null">
                auto_add_new_items = #{autoAddNewItems,jdbcType=BIT},
            </if>
            <if test="excludeItemNumIids != null">
                exclude_item_num_iids = #{excludeItemNumIids,jdbcType=VARCHAR},
            </if>
            <if test="distribution != null">
                distribution = #{distribution,jdbcType=VARCHAR},
            </if>
            <if test="distributionType != null">
                distribution_type = #{distributionType,jdbcType=TINYINT},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=TINYINT},
            </if>
            <if test="lastPlanTime != null">
                last_plan_time = #{lastPlanTime,jdbcType=TIMESTAMP},
            </if>
            <if test="addTime != null">
                add_time = #{addTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updTime != null">
                upd_time = #{updTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT} and user_id = #{userId,jdbcType=BIGINT}
    </update>
    <select id="countByUserIdAndStatus" parameterType="map" resultType="java.lang.Integer">
        select count(*) from plan_setting
        where user_id = #{userId,jdbcType=BIGINT} and
        <trim prefix="(" suffix=")" prefixOverrides="and">
            <foreach collection="statusList" item="status" separator="or">
                `status` = #{status,jdbcType=TINYINT}
            </foreach>
        </trim>
    </select>
    <select id="countByUserId" parameterType="long" resultType="java.lang.Integer">
        SELECT
            count(*)
        FROM plan_setting
        WHERE user_id = #{userId,jdbcType=BIGINT}
    </select>
    <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from plan_setting
        where user_id = #{userId,jdbcType=BIGINT}
    </select>
    <select id="selectByUserIdAndStatus" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from plan_setting
        where user_id = #{userId,jdbcType=BIGINT}
        <trim prefix="(" suffix=")" prefixOverrides="and">
            <foreach collection="statusList" item="status" separator="or">
                `status` = #{status,jdbcType=TINYINT}
            </foreach>
        </trim>
    </select>
    <select id="paginateByUserIdAndStatus" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from plan_setting
        where user_id = #{userId,jdbcType=BIGINT} and
        <trim prefix="(" suffix=")" prefixOverrides="and">
            <foreach collection="statusList" item="status" separator="or">
                `status` = #{status,jdbcType=TINYINT}
            </foreach>
        </trim>
        LIMIT #{offset,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}
    </select>
    <select id="paginateByStatus" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from plan_setting
        where id > #{hitId,jdbcType=BIGINT} and
        <trim prefix="(" suffix=")" prefixOverrides="and">
            <foreach collection="statusList" item="status" separator="or">
                `status` = #{status,jdbcType=TINYINT}
            </foreach>
        </trim>
        ORDER BY user_id asc
        LIMIT 0,#{limit,jdbcType=INTEGER}
    </select>
    <select id="paginateByUserIdAndName" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from plan_setting
        where user_id = #{userId,jdbcType=BIGINT}
        <if test="query">
            and (`name` like CONCAT('%','${query}','%') or name_pinyin like CONCAT('%','${query}','%'))
        </if>
        LIMIT #{offset,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}
    </select>
    <select id="selectByPrimaryKeyAndUserId" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from plan_setting
        where id = #{id,jdbcType=BIGINT} and user_id = #{userId,jdbcType=BIGINT}
    </select>
    <select id="countByUserIdAndName" parameterType="long" resultType="java.lang.Integer">
        SELECT count(*) FROM plan_setting
        where user_id = #{userId,jdbcType=BIGINT}
        <if test="query">
            and (`name` like CONCAT('%','${query}','%') or name_pinyin like CONCAT('%','${query}','%'))
        </if>
    </select>
    <select id="paginateAutoAddItemPlanSettings" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from plan_setting
        where id > #{hitId,jdbcType=BIGINT}
        and auto_add_new_items = 1
        and `status`=1
        where
        LIMIT 0, #{limit,jdbcType=INTEGER}
    </select>
    <select id="paginateUserIdByStatus" resultType="long" parameterType="map">
        select user_id from plan_setting
        where user_id > #{hitUserId,jdbcType=BIGINT} and
        <trim prefix="(" suffix=")" prefixOverrides="and">
            <foreach collection="statusList" item="status" separator="or">
                `status` = #{status,jdbcType=TINYINT}
            </foreach>
        </trim>
        group by user_id
        order by user_id asc
        LIMIT 0, #{limit,jdbcType=INTEGER}
    </select>
</mapper>